uniform sampler2D source_image;
uniform vec3 texel_radius;

in vec2 TexCoord;
out vec4 FragColor;

#define INV_SQRT_2PI_X3 1.1968268412042980338198381798031

void main()
{
 float r = texel_radius.z;

 float exp_value = -4.5 / r / r;
 float sqrt_value = INV_SQRT_2PI_X3 / r;

 float sum = 0.0;
 vec4 value = vec4(0.0);

 float x = 1.0;
 while (x <= r)
 {
  float currentScale = exp(exp_value * x * x);
  sum += currentScale;

  vec2 dudv = texel_radius.xy * x;
  value += currentScale * (texture(source_image, TexCoord - dudv) +
                     texture(source_image, TexCoord + dudv) );
  x += 1.0;
 }

 float correction = 2.0 * (0.5 / sqrt_value - sum);
 value += texture(source_image, TexCoord) * correction;
 
 FragColor = value * sqrt_value;
}