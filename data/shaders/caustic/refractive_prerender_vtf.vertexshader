#version 140

uniform sampler2D vtf_map;
uniform mat4 mModelViewProjection;
uniform vec2 vTexel;
uniform vec3 vPrimaryLight;

in vec4 Vertex;
in vec3 Normal;
in vec2 TexCoord0;

out vec3 vNormalWS;
out vec4 vVertexWS;

const float heightScale = 10.0;

float sampleHeight(float dx, float dy)
{
 return heightScale * textureLod(vtf_map, TexCoord0 + vec2(dx, dy), 0 ).x;
}

void main()
{
 float fSample00 = sampleHeight(     0.0,      0.0);
 float fSample10 = sampleHeight(     0.0, vTexel.y);
 float fSample01 = sampleHeight(vTexel.x,      0.0);
 vNormalWS = vec3( fSample01 - fSample00, 0.25 * heightScale, fSample10 - fSample00);
                                 
 vVertexWS = Vertex + vec4(0.0, fSample00, 0.0, 0.0);

// vNormalWS = refract( normalize( vVertexWS.xyz - vPrimaryLight ), vNormalWS, 0.6);

 gl_Position = mModelViewProjection * vVertexWS;
}