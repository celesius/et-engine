#version 150
precision highp float;

uniform sampler2D velocity_texture;
uniform sampler2D entity_texture;

uniform vec4 vSource;
uniform vec2 vDirection;

uniform float dt;
uniform float fTexel;
uniform float fDissipation;

in vec2 TexCoord;
out vec4 FragColor;

void main()
{
 vec2 vNewTC = TexCoord - dt * texture(velocity_texture, TexCoord).xy;

 vNewTC /= fTexel;
 vec2 vFloor = floor(vNewTC - 0.5) + 0.5;
 vec2 vCeil  = vFloor + vec2(1.0);
 vec2 vDist  = vNewTC - vFloor;

 vFloor *= fTexel;
 vCeil  *= fTexel;

 vec2 c00 = texture(entity_texture, vFloor).xy;
 vec2 c11 = texture(entity_texture, vCeil ).xy;
 vec2 c01 = texture(entity_texture, vec2(vCeil.x, vFloor.y ) ).xy;
 vec2 c10 = texture(entity_texture, vec2(vFloor.x, vCeil.y ) ).xy;
 vec2 cTop = mix( c10, c11, vDist.x );
 vec2 cBtm = mix( c00, c01, vDist.x );
 vec2 cColor = mix(cBtm, cTop, vDist.y );

 //cColor = texture(entity_texture, vNewTC).xy;

 vec2 extSource = vec2(0.0);
 if (vSource.z > 0.0)
 {
   float R = exp( -vSource.w * length( TexCoord - vSource.xy ) / vSource.z );
   extSource = vec2(dt * vDirection * R);
 }

 FragColor = vec4( fDissipation * cColor + extSource, 0.0, 0.0);
}
